version: 2
image_name: trustyai
apis:
- agents
- datasetio
- eval
- inference
- safety
- scoring
- telemetry
- tool_runtime
- vector_io
- files
- benchmarks
providers:
  inference:
  - provider_id: vllm-inference
    provider_type: remote::vllm
    config:
      url: ${env.VLLM_URL:=http://localhost:8000/v1}
      max_tokens: ${env.VLLM_MAX_TOKENS:=4096}
      api_token: ${env.VLLM_API_TOKEN:=fake}
      tls_verify: ${env.VLLM_TLS_VERIFY:=true}
  - provider_id: sentence-transformers
    provider_type: inline::sentence-transformers
    config: {}
  vector_io:
  - provider_id: milvus
    provider_type: inline::milvus
    config:
      db_path: /opt/app-root/src/.llama/distributions/trustyai/milvus.db
      kvstore:
        type: sqlite
        namespace: null
        db_path: /opt/app-root/src/.llama/distributions/trustyai/milvus_registry.db
  safety:
    - provider_id: trustyai_fms
      provider_type: remote::trustyai_fms
      config:
        orchestrator_url: ${env.FMS_ORCHESTRATOR_URL:=}
        ssl_cert_path: ${env.FMS_SSL_CERT_PATH:=}
        shields: {}
  agents:
  - provider_id: meta-reference
    provider_type: inline::meta-reference
    config:
      persistence_store:
        type: sqlite
        namespace: null
        db_path: /opt/app-root/src/.llama/distributions/trustyai/agents_store.db
      responses_store:
        type: sqlite
        db_path: /opt/app-root/src/.llama/distributions/trustyai/responses_store.db
  eval:
  - provider_id: trustyai_lmeval
    provider_type: remote::trustyai_lmeval
    config:
        use_k8s: True
        base_url: ${env.VLLM_URL:=http://localhost:8000/v1}
  - provider_id: trustyai_garak
    provider_type: inline::trustyai_garak
    config:
      base_url: ${env.BASE_URL:=http://localhost:8321/v1} # llama-stack service base url
      timeout: ${env.GARAK_TIMEOUT:=10800}
      max_concurrent_jobs: ${env.GARAK_MAX_CONCURRENT_JOBS:=5}
      tls_verify: ${env.GARAK_TLS_VERIFY:=true}
  datasetio:
  - provider_id: huggingface
    provider_type: remote::huggingface
    config:
      kvstore:
        type: sqlite
        namespace: null
        db_path: /opt/app-root/src/.llama/distributions/trustyai/huggingface_datasetio.db
  - provider_id: localfs
    provider_type: inline::localfs
    config:
      kvstore:
        type: sqlite
        namespace: null
        db_path: /opt/app-root/src/.llama/distributions/trustyai/localfs_datasetio.db
  scoring:
  - provider_id: basic
    provider_type: inline::basic
    config: {}
  - provider_id: llm-as-judge
    provider_type: inline::llm-as-judge
    config: {}
  - provider_id: braintrust
    provider_type: inline::braintrust
    config:
      openai_api_key: ${env.OPENAI_API_KEY:=}
  telemetry:
  - provider_id: meta-reference
    provider_type: inline::meta-reference
    config:
      service_name: "${env.OTEL_SERVICE_NAME:=\u200B}"
      sinks: ${env.TELEMETRY_SINKS:=console,sqlite}
      sqlite_db_path: /opt/app-root/src/.llama/distributions/trustyai/trace_store.db
      otel_exporter_otlp_endpoint: ${env.OTEL_EXPORTER_OTLP_ENDPOINT:=}
  tool_runtime:
  - provider_id: brave-search
    provider_type: remote::brave-search
    config:
      api_key: ${env.BRAVE_SEARCH_API_KEY:=}
      max_results: 3
  - provider_id: tavily-search
    provider_type: remote::tavily-search
    config:
      api_key: ${env.TAVILY_SEARCH_API_KEY:=}
      max_results: 3
  - provider_id: rag-runtime
    provider_type: inline::rag-runtime
    config: {}
  - provider_id: model-context-protocol
    provider_type: remote::model-context-protocol
    config: {}
  files:
  - provider_id: meta-reference-files
    provider_type: inline::localfs
    config:
      storage_dir: /opt/app-root/src/.llama/distributions/trustyai/files
      metadata_store:
        type: sqlite
        db_path: /opt/app-root/src/.llama/distributions/trustyai/registry.db
metadata_store:
  type: sqlite
  db_path: /opt/app-root/src/.llama/distributions/trustyai/registry.db
inference_store:
  type: sqlite
  db_path: /opt/app-root/src/.llama/distributions/trustyai/inference_store.db
models:
- metadata: {}
  model_id: ${env.INFERENCE_MODEL}
  provider_id: vllm-inference
  model_type: llm
- metadata:
    embedding_dimension: 768
  model_id: granite-embedding-125m
  provider_id: sentence-transformers
  provider_model_id: ibm-granite/granite-embedding-125m-english
  model_type: embedding
shields: []
vector_dbs: []
datasets: []
scoring_fns: []
benchmarks:
- benchmark_id: quick
  dataset_id: garak
  scoring_functions:
    - garak_scoring
  provider_id: trustyai_garak
  provider_benchmark_id: quick
- benchmark_id: standard
  dataset_id: garak
  scoring_functions:
    - garak_scoring
  provider_id: trustyai_garak
  provider_benchmark_id: standard
- benchmark_id: owasp_llm_top10
  dataset_id: garak
  scoring_functions:
    - garak_scoring
  provider_id: trustyai_garak
  provider_benchmark_id: owasp_llm_top10
- benchmark_id: avid_security
  dataset_id: garak
  scoring_functions:
    - garak_scoring
  provider_id: trustyai_garak
  provider_benchmark_id: avid_security
- benchmark_id: avid_ethics
  dataset_id: garak
  scoring_functions:
    - garak_scoring
  provider_id: trustyai_garak
  provider_benchmark_id: avid_ethics
- benchmark_id: avid_performance
  dataset_id: garak
  scoring_functions:
    - garak_scoring
  provider_id: trustyai_garak
  provider_benchmark_id: avid_performance
tool_groups:
- toolgroup_id: builtin::websearch
  provider_id: tavily-search
- toolgroup_id: builtin::rag
  provider_id: rag-runtime
server:
  port: 8321
external_providers_dir: /opt/app-root/src/.llama/providers.d
